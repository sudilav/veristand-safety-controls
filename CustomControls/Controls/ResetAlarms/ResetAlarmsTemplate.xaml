<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:windowsThemes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
					xmlns:niBooleans="clr-namespace:NationalInstruments.Controls;assembly=NationalInstruments.Controls.Booleans"
					xmlns:CustomControls="clr-namespace:NationalInstruments.VeriStand.CustomControls">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/NationalInstruments.Controls.SkinProviders.Booleans;component/SystemSkins/All/Themes/Brushes.System.xaml" />
		<ResourceDictionary Source="/NationalInstruments.Controls.SkinProviders.Booleans;component/SystemSkins/Booleans/Primitives/InteractionContentBrushes.System.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style x:Key="ResetAlarms" TargetType="{x:Type CustomControls:ResetAlarms}">
		<Setter Property="Control.Padding" Value="1" />
		<Setter Property="Control.HorizontalContentAlignment" Value="Center" />
		<Setter Property="Control.VerticalContentAlignment" Value="Center" />
		<Setter Property="Control.Background" Value="{StaticResource Aero-Background}" />
		<Setter Property="Control.BorderBrush" Value="{StaticResource Aero-Border}" />
		<Setter Property="Control.BorderThickness" Value="1.05" />
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CustomControls:ResetAlarms}">
					<Grid>
						<windowsThemes:ButtonChrome windowsThemes:ButtonChrome.Name="Chrome" windowsThemes:ButtonChrome.Background="{TemplateBinding Control.Background}" windowsThemes:ButtonChrome.BorderBrush="{TemplateBinding Control.BorderBrush}" windowsThemes:ButtonChrome.RenderDefaulted="{TemplateBinding UIElement.IsKeyboardFocused}" windowsThemes:ButtonChrome.RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" windowsThemes:ButtonChrome.RenderPressed="{TemplateBinding niBooleans:BooleanButton.RenderPressed}" UIElement.SnapsToDevicePixels="True">
							<ContentPresenter Name="TFContentHost" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="Reset Alarms" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Visibility="{TemplateBinding niBooleans:BooleanButton.ContentVisibility}" />
						</windowsThemes:ButtonChrome>
						<Border Name="TFBrushHost" Margin="0.95" BorderBrush="{TemplateBinding niBooleans:BooleanContentButton.FalseBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="1.75" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsEnabled" Value="False">
							<Setter Property="Control.Foreground" Value="{StaticResource Aero-Foreground_Disabled}" />
						</Trigger>
						<Trigger Property="niBooleans:BooleanButton.Value" Value="True">
							<Setter TargetName="TFContentHost" Property="ContentPresenter.Content" Value="Reset Alarms" />
							<Setter TargetName="TFBrushHost" Property="Border.BorderBrush" Value="{Binding Path=TrueBrush, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger Property="niBooleans:BooleanButton.RenderPressed" Value="True">
							<Setter TargetName="TFContentHost" Property="UIElement.RenderTransform">
								<Setter.Value>
									<TranslateTransform X="0.5" Y="0.5" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="ButtonBase.IsPressed" Value="True">
							<Setter TargetName="TFContentHost" Property="UIElement.RenderTransform">
								<Setter.Value>
									<TranslateTransform X="1.0" Y="1.0" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Type CustomControls:ResetAlarms}" TargetType="{x:Type CustomControls:ResetAlarms}" BasedOn="{StaticResource ResetAlarms}" />
</ResourceDictionary>